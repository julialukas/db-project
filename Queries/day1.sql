-- This is how you write comment in sql
-- single line comment looks like this

/*
 This is how you write multi
 line comment
 */
-- each query you write known as sql statement
-- * means all, here it means all columns
-- from some table that exist in the database

SELECT * FROM REGIONS;
-- IF YOU WANT TO RUN SECOND STATEMENT
-- YOU JUST NEED TO CLICK THE QUERY TO FOCUS THE CURSOR AND CLICK RUN
SELECT * FROM COUNTRIES;

SELECT * FROM LOCATIONS;

SELECT * FROM DEPARTMENTS;

SELECT * FROM JOBS;

SELECT * FROM JOB_HISTORY;

SELECT * FROM EMPLOYEES;

--RESTRICTING COLUMNS IN THE RESULT
--SQL IS SPACE INSENSITIVE
SELECT FIRST_NAME FROM EMPLOYEES;

SELECT FIRST_NAME, LAST_NAME
       FROM EMPLOYEES;

/*
 TASK: SELECT SPECIFIC COLUMNS FROM OTHER TABLES
 */

 SELECT DISTINCT FIRST_NAME
FROM EMPLOYEES; --91

-- GET ONLY UNIQUE LAST NAMES
SELECT DISTINCT LAST_NAME
FROM EMPLOYEES; -- 102 ROWS

-- THIS IS LOOKING FOR PEOPLE WITH UNIQUE FN, LM
SELECT DISTINCT FIRST_NAME, LAST_NAME
FROM EMPLOYEES;

-- RESTRICTING ROWS IN THE RESULT WHERE CLAUSE
-- COMPARISON OPERATORS: =, > >=, <, <=, !=, <>
-- LOGICAL OPERATORS: AND OR

-- DISPLAY THE EMPLOYEE INFORMATION FOR THE EMPLOYEE WITH THE FIRST_NAME ELLEN
SELECT * FROM EMPLOYEES
WHERE FIRST_NAME = 'Ellen'; -- Ellen  != ellen != ELLEN,values are case sensitive

-- DISPLAY THE EMPLOYEE FIRST_NAME, LAST_NAME, SALARY
-- FOR THE EMPLOYEE WITH SALARY  11000
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY = 11000 ;

-- DISPLAY THE EMPLOYEE FIRST_NAME, LAST_NAME, SALARY
-- FOR THE EMPLOYEE WITH SALARY 4800 and first_name David
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME = 'DAVID' OR SALARY = 4800;

--DISPLAY THE EMPLOYEES THAT MAKE MORE THAN 5000 AND LESS THAN 12000
SELECT * FROM EMPLOYEES
WHERE SALARY>5000 AND SALARY<12000;


--DISPLAY THE EMPLOYEE THAT HAVE JOB_ID OF
                                --AD_VP
                                --AD_ASST
                                --FI_ACCOUNT
                                --AC_ACCOUNT
SELECT FIRST_NAME , JOB_ID FROM EMPLOYEES
WHERE JOB_ID = 'AD_VP'
OR    JOB_ID = 'AD_ASST'
OR    JOB_ID = 'FI_ACCOUNT'
OR    JOB_ID = 'AC_ACCOUNT' ;


-- USING KEYWORD IN FOR MULTIPLE POSSIBLE VALUE OF SAME COLUMN IN CONDITION
SELECT FIRST_NAME, JOB_ID
FROM EMPLOYEES
WHERE JOB_ID IN ('AD_VP', 'AD_ASST', 'FI_ACCOUNT', 'AC_ACCOUNT') ;

-- HOW TO SAY NOT IN SQL
--FOR EQUALITY CHECK != <>,
-- FIND OUT ALL REGIONS EXPECT THE REGION WITH REGION_ID OF 1
SELECT * FROM REGIONS
WHERE REGION_ID <> 1;
--WHERE REGION_ID != 1 ;

SELECT * FROM REGIONS
 WHERE REGIONS.REGION_NAME <> 'AMERICAS' ;

-- for BETWEEN AND --> NOT BETWEEN .. AND

-- DISPLAY THE EMPLOYEES THAT DOES NOT MAKE
-- MORE THAN 5000 AND LESS THANK 12000

SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY NOT BETWEEN 5000 AND 12000 ;

-- FOR IN --> NOT IN
-- DISPLAY THE EMPLOYEES THAT HAVE JOB_ID

SELECT FIRST_NAME, JOB_ID
FROM EMPLOYEES
WHERE JOB_ID NOT IN ('AD_VP', 'AD_ASST', 'FI_ACCOUNT', 'AC_ACCOUNT');


SELECT * FROM DEPARTMENTS
WHERE MANAGER_ID IS NOT NULL ; -- 11 ROWS


-- sorting the result in ascending (low to high)
--                            or descending order (high to low)
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
ORDER BY 1 DESC;


-- what about the partial search
-- we use like and % (wild card)
-- % can represent 0 or more character of any kind



