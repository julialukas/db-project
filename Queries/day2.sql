-- WHAT ABOUT THE PARTIAL SEARCH
-- WE USE LIKE AND % (WILD CARD)
-- % CAN REPRESENT 0 OR MORE CHARACTER OF ANY KIND
-- _ CAN REPRESENT EXACTLY ONE CHARACTER OF ANY KIND
/*
 'D%' -- ANYTHING THAT STARTS WITH D
        David, Danny, Dog

 '%d' -- ANYTHING THAT ENDS WITH d
        Sid, Bid, Kid, Dad

 '%d%' -- ANYTHING THAT CONTAINS D
        Aladdin, Cassandra, Adam,
        Sid, Bid, Kid, Dad
        David, Danny, Dog

'D%a"  -- ANYTHING STARTS WITH D AND ENDS WITH A
        DIANA, DONNA, DAMLA, DARIA

 'S%e%n' -- any name that starts with S and ends with A & has e in the middle
        Stephen, Seven, Sebastian

  'T_' -- STARTS WITH T AND FOLLOWED BY EXACTLY ONE CHARACTER OF ANY KIND
        TJ, TD, TA, T!, TV

  '_a_' -- starts with any one characters, followed by a and followed byt any character
        dad, man, fat, tab, gap, mad

 */

    SELECT FIRST_NAME FROM EMPLOYEES
--WHERE FIRST_NAME LIKE 'D%' ;
  --  WHERE FIRST_NAME LIKE '%d%'
--  WHERE FIRST_NAME LIKE 'D%a';
  --  WHERE FIRST_NAME LIKE 'S%E%N';
  --  WHERE FIRST_NAME LIKE 'T_';
    WHERE FIRST_NAME LIKE '_a_';

--get
SELECT PHONE_NUMBER FROM EMPLOYEES
--WHERE PHONE_NUMBER LIKE '515%';
WHERE PHONE_NUMBER LIKE '%.121.%'  ; --contains with 121


-- YOU CAN OPTIONALLY GIVE AN ALIAS (NICKNAME) FOR YOUR COLUMN,
-- TO CHANGE THE RESULTING COLUMN NAME (ONLY CHANGING THE DISPLAY)
-- USING THE KEY WORD 'AS' RIGHT AFTER COLUMN NAME
-- AND PROVIDE
-- DISPLAY ALL FIRST_NAME, SALARY IN EMPLOYEES TABLE
-- MODIFY THE COLUMN NAME FOR SALARY IN RESULT TO MONEY

SELECT FIRST_NAME , SALARY AS MONEY
FROM EMPLOYEES ;


-- Display all FIRST_NAME , LAST_NAME in Employees table
-- modify the column name for AS BELOW
-- FIRST_NAME -> GIVEN_NAME    LAST_NAME --> FAMILY_NAME

SELECT FIRST_NAME AS GIVEN_NAME , LAST_NAME AS FAMILY_NAME
FROM EMPLOYEES;

-- Display all FIRST_NAME , LAST_NAME in Employees table
-- modify the column name for AS BELOW
-- FIRST_NAME -> GIVEN NAME    LAST_NAME --> FAMILY NAME

SELECT FIRST_NAME AS "GIVEN NAME" , LAST_NAME AS "FAMILY NAME"
FROM EMPLOYEES;

-- CONCATENATION IN SQL USE DOUBLE PIPE || (THIS IS NOT OR)
-- DISPLAY FIRST_NAME, LAST_NAME, FULL_NAME FOR EMPLOYEE
SELECT FIRST_NAME, LAST_NAME,
       FIRST_NAME || ' ' || LAST_NAME AS "FULL_NAME"
FROM EMPLOYEES;

-- ARITHMETIC OPERATION : + - * /
-- Display EMPLOYEE FIRST_NAME AND SALARY AND INCREASED_SALARY AFTER 5000$ RAISE
SELECT FIRST_NAME, SALARY ,
       SALARY + 5000 AS "INCREASED_SALARY"
FROM EMPLOYEES ;
-- and decreased_salary after $2000 cut
SELECT FIRST_NAME, SALARY,
       SALARY - 2000 AS "DECREASED_SALARY"
FROM EMPLOYEES;

-- YEARLY_SALARY -- MULTIPLY BY 12
SELECT FIRST_NAME, SALARY,
        SALARY * 12 AS "YEARLY_SALARY"
FROM EMPLOYEES;

--AND WEEKLY_SALARY -- DIVIDE BY 4
SELECT FIRST_NAME, SALARY,
       SALARY + 5000 AS "INCREASED_SALARY",
       SALARY - 2000 AS "DECREASED_SALARY",
       SALARY * 12 AS "YEARLY_SALARY",
       SALARY / 4 AS "WEEKLY_SALARY"
FROM EMPLOYEES;

--- SQL BUILT-IN FUNCTIONS :
--- REUSABLE CODE THAT WRAPPED INTO FUNCTION FOR COMMON TASKS
-- LIKE ROUNDING NUMBERS , GETTING LENGTH OF STR AND MORE
-- SINGLE ROW FUNCTION :
-- IT AFFECT EACH AND EVERY ROW AND RETURN SAME NUMBER OF ROW

-- FEW TEXT FUNCTIONS :
-- UPPER ,
-- LOWER ,
-- LENGTH

-- Display FIRST_NAME , and UPPERCASE FIRST NAME IN EMPLOYEE TABLE
SELECT FIRST_NAME , UPPER(FIRST_NAME)
FROM EMPLOYEES ;

SELECT FIRST_NAME ,
       UPPER(FIRST_NAME) ,
       LOWER(FIRST_NAME) ,
       LENGTH(FIRST_NAME)
FROM EMPLOYEES;

SELECT FIRST_NAME ,
       UPPER(FIRST_NAME) AS "UPPERCASE_NAME",
       LOWER(FIRST_NAME) AS "LOWERCASE_NAME",
       LENGTH(FIRST_NAME) AS "CHAR_COUNT"
FROM EMPLOYEES;

-- FIND OUT ALL FIRST_NAME AND CHARACTER COUNT
-- ONLY DISPLAY IF CHARACTER COUNT IS EXACTLY 5

SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) = 5;

-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT IT MORE THAN 10
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) > 10;

-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT IT BETWEEN 7-9
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) BETWEEN 7 AND 9;

-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT NOT BETWEEN 5-10
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) NOT BETWEEN 5 AND 10;

-- ONLY DISPLAY IF FIRST NAME CHARACTER COUNT IS 2 OR 9 OR 13
SELECT FIRST_NAME, LENGTH(FIRST_NAME)
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) IN (2, 9, 11);

--FIND OUT ALL THE FIRST_NAME THAT CONTAINS d OR D
